{"version":3,"file":"static/js/716.4ef7d1d0.chunk.js","mappings":"8MASMA,GAAsBC,EAAAA,EAAAA,KAAS,WACnC,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACLC,EAAAA,EAAAA,SAAcC,EAAAA,GAAWH,GAAY,GACnCA,GAAY,KAChB,CAACE,EAAAA,EAAAA,UAGF,8BACGE,EAAAA,EAAAA,wBAAqCC,EAAAA,EAAAA,SAAqD,OAA7BA,EAAAA,EAAAA,cAE1D,gBAAKC,UAAU,wCAAf,UAAuD,SAAC,IAAD,OAEvD,SAAC,IAAD,CAAcC,QAAQ,wBACpBC,UAAWH,EAAAA,EAAAA,UACXN,SAAUA,EACVU,aAAcJ,EAAAA,EAAAA,oBAM1B,a,sGChCO,IAAMK,EAAqB,SAACC,GAAmC,IAAvBC,EAAsB,uDAAf,IAAIC,KACpDC,EAAa,IAAID,KAErB,OADAC,EAAWC,SAASH,EAAKI,WAAaL,GAC/B,CAACC,EAAKK,mBAAmB,SAAUH,EAAWG,mBAAmB,WAG7DC,EAAc,SAACN,GAC1B,IAAIA,EAAM,MAAO,QACjB,IAAMO,EAAQ,IAAIN,MAAK,IAAIA,MAAOI,mBAAmB,UAC/CG,EAAU,IAAIP,KAAKD,GACnBS,EAAWC,KAAKC,IAAIJ,EAAQC,GAC5BI,EAAWF,KAAKG,KAAKJ,EAAQ,OAEnC,OAAgB,IAAbG,EAAuB,QACV,IAAbA,EAAuB,YACvBA,EAAW,EACCJ,EAAQM,eAAe,QAAQ,CAACC,IAAK,YAGrC,IAFEP,EAAQM,eAAe,QAAQ,CAACE,MAAM,SAE1B,KADdR,EAAQM,eAAe,QAAQ,CAACG,KAAK,iBAHpD,GAQWC,EAAiB,SAAClB,GAoB7B,IAnBA,IAAImB,EAAc,IAAIlB,KAAKD,EAAKoB,cAAepB,EAAKI,WAAY,GAC5DiB,EAAiBF,EAAYG,UAE7BC,EAAW,IAAItB,KAAKD,EAAKoB,cAAepB,EAAKI,WAAY,GAEzDoB,GADc,IAAIvB,KAAKD,EAAKoB,cAAepB,EAAKI,WAAY,GAAGkB,UAChDC,EAAST,eAAe,QAAQ,CAAEW,QAAS,UAAUC,eAEpEC,EAAU,IAAI1B,KAAKD,EAAKoB,cAAepB,EAAKI,WAAa,EAAG,GAC5DwB,EAAa,IAAI3B,KAAKD,EAAKoB,cAAepB,EAAKI,WAAa,EAAG,GAAGkB,UAGlEO,GAFcF,EAAQb,eAAe,QAAQ,CAAEW,QAAS,UAAUC,cAErD,IAAIzB,KAAKD,EAAKoB,cAAepB,EAAKI,WAAa,EAAG,IAC/D0B,EAAgBD,EAAWP,UAGzBS,EADW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC/BC,QAAQR,GAE/BS,EAAU,GACZC,EAAS,EACLC,EAAI,EAAGA,EAAI,GAAIA,IAClBA,EAAIJ,EAAYE,EAAQG,KAAK,CAACrB,IAAKM,EAAiBU,EAAaI,EAAI,EAAGE,GAAIF,EAC7EnC,KAAM,IAAIC,KAAKkB,EAAYC,cAAeD,EAAYf,WACtDiB,EAAiBU,EAAaI,EAAI,GAAG9B,mBAAmB,SACxDiC,MAAM,IACAH,GAAKJ,GAAcG,GAAUN,EAAYK,EAAQG,KAAK,CAACrB,IAAKmB,IAAUG,GAAIF,EAChFnC,KAAM,IAAIC,KAAKsB,EAASH,cAAeG,EAASnB,WAChD8B,EAAS,GAAG7B,mBAAmB,SAC/BiC,MAAM,IACHL,EAAQG,KAAK,CAACrB,IAAKe,IAAiBO,GAAIF,EAC3CnC,KAAM,IAAIC,KAAK4B,EAAWT,cAAeS,EAAWzB,WACpD0B,EAAgB,GAAGzB,mBAAmB,SACtCiC,MAAM,IAEV,OAAOL","sources":["pages/Archive/Pages/ArchiveTransactions/ArchiveTransactions.jsx","utils/dates.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport FilterStore from '../../../../store/FilterStore';\r\nimport UserStore from '../../../../store/UserStore';\r\nimport Transactions from '../../../../components/Transactions/Transactions';\r\nimport Spinner from '../../../../components/Spinner/Spinner';\r\nimport { observer } from 'mobx-react-lite';\r\nimport UI from '../../../../store/UI';\r\nimport { UI_MOBILE } from '../../../../utils/consts';\r\n\r\nconst ArchiveTransactions = observer(() => {\r\n  const [isDetail, setIsDetail] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(UI.device === UI_MOBILE) setIsDetail(false); // set detail info for transaction when device not mobile\r\n    else setIsDetail(true);\r\n  }, [UI.device]);\r\n  \r\n  return (\r\n    <>\r\n      {UserStore.isFetchingTransactions  || FilterStore.sorting  || FilterStore.transactions === null\r\n        ? \r\n          <div className='overview__item overview__transactions'><Spinner /></div>\r\n        : \r\n          <Transactions classes='archive__transactions' \r\n            isResults={FilterStore.isResults}\r\n            isDetail={isDetail}\r\n            transactions={FilterStore.transactions} />\r\n      }\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ArchiveTransactions;","export const getMonthBeforeDate = (monthCount, date = new Date()) => {\r\n  let monthLater = new Date();\r\n  monthLater.setMonth(date.getMonth() - monthCount);\r\n  return [date.toLocaleDateString('en-CA'), monthLater.toLocaleDateString('en-CA')]\r\n}\r\n\r\nexport const getDateName = (date) => {\r\n  if(!date) return 'Today';\r\n  const today = new Date(new Date().toLocaleDateString('en-CA'));\r\n  const dateObj = new Date(date);\r\n  const diffTime = Math.abs(today - dateObj);\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n\r\n  if(diffDays === 0) return 'Today';    \r\n  if(diffDays === 1) return 'Yesterday';\r\n  if(diffDays > 1) {\r\n    const day =  dateObj.toLocaleString('en-us',{day: 'numeric'});\r\n    const month =  dateObj.toLocaleString('en-us',{month:'long'});\r\n    const year = dateObj.toLocaleString('en-us',{year:'numeric'});\r\n    return day + \" \" + month + \", \" + year;\r\n  }\r\n}\r\n\r\nexport const getDaysInMonth = (date) => {\r\n  let monthBefore = new Date(date.getFullYear(), date.getMonth(), 0);\r\n  let monthBeforeDay = monthBefore.getDate();\r\n\r\n  let firstDay = new Date(date.getFullYear(), date.getMonth(), 1)\r\n  let firstDayNum = new Date(date.getFullYear(), date.getMonth(), 1).getDate();\r\n  let firstDayName = firstDay.toLocaleString('en-us',{ weekday: 'short'}).toUpperCase();\r\n\r\n  let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  let lastDayNum = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n  let lastDayName = lastDay.toLocaleString('en-us',{ weekday: 'short'}).toUpperCase();\r\n\r\n  let monthAfter = new Date(date.getFullYear(), date.getMonth() + 1, 1);\r\n  let monthAfterDay = monthAfter.getDate();\r\n\r\n  const weekdays = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT' ];\r\n  const startIndex =  weekdays.indexOf(firstDayName);\r\n\r\n  const daysLet = []\r\n  let dayNum = 1;\r\n  for(let i = 0; i < 35; i++) {\r\n    if(i < startIndex) daysLet.push({day: monthBeforeDay - startIndex + i + 1, id: i, \r\n      date: new Date(monthBefore.getFullYear(), monthBefore.getMonth(),\r\n      monthBeforeDay - startIndex + i + 1).toLocaleDateString('en-CA'),\r\n      this: false})\r\n    else if(i >= startIndex && dayNum <= lastDayNum) daysLet.push({day: dayNum++, id: i, \r\n      date: new Date(firstDay.getFullYear(), firstDay.getMonth(),\r\n      dayNum - 1).toLocaleDateString('en-CA'),\r\n      this: true})\r\n    else daysLet.push({day: monthAfterDay++, id: i, \r\n      date: new Date(monthAfter.getFullYear(), monthAfter.getMonth(),\r\n      monthAfterDay - 1).toLocaleDateString('en-CA'),\r\n      this: false})\r\n  }\r\n  return daysLet;\r\n}"],"names":["ArchiveTransactions","observer","useState","isDetail","setIsDetail","useEffect","UI","UI_MOBILE","UserStore","FilterStore","className","classes","isResults","transactions","getMonthBeforeDate","monthCount","date","Date","monthLater","setMonth","getMonth","toLocaleDateString","getDateName","today","dateObj","diffTime","Math","abs","diffDays","ceil","toLocaleString","day","month","year","getDaysInMonth","monthBefore","getFullYear","monthBeforeDay","getDate","firstDay","firstDayName","weekday","toUpperCase","lastDay","lastDayNum","monthAfter","monthAfterDay","startIndex","indexOf","daysLet","dayNum","i","push","id","this"],"sourceRoot":""}